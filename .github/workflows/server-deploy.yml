name: Server Build and Deploy

on:
  push:
    branches:
      - 'release/**'
    paths:
      - 'server/**'
      - '.github/workflows/server-deploy.yml'
  workflow_dispatch:

env:
  REGISTRY: raiqahealthacr.azurecr.io
  IMAGE_NAME: raiqa-assistant-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Generate version
        id: version
        run: echo "version=$(date +'%Y%m%d').${{ github.run_number }}" >> $GITHUB_OUTPUT
      
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
          
      - name: Login to ACR
        run: az acr login --name raiqahealthacr
          
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}

  deploy-qa:
    needs: build-and-push
    if: startsWith(github.ref, 'refs/heads/release/qa')
    runs-on: ubuntu-latest
    environment: qa
    
    steps:
      - uses: actions/checkout@v4
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      - name: Run Prisma migrations and seed
        run: |          
          npm install
          # URL encode the password and store it
          ENCODED_PASSWORD=$(node -e "console.log(encodeURIComponent('${{ secrets.PSQL_PASSWORD_QA }}'))")
          export DATABASE_URL="postgresql://${{ secrets.PSQL_ADMIN }}:${ENCODED_PASSWORD}@raiqa-health-qa-psql.postgres.database.azure.com:5432/raiqa_assistant_db?sslmode=require&connection_limit=5"
          export DIRECT_URL="postgresql://${{ secrets.PSQL_ADMIN }}:${ENCODED_PASSWORD}@raiqa-health-qa-psql.postgres.database.azure.com:5432/raiqa_assistant_db?sslmode=require&connection_limit=5"
          
          # Run the migration and seeding
          yarn prisma:setup
          
      - name: Deploy to Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: raiqa-health-assistant-qa-server
          resourceGroup: raiqa-health-qa-rg
          imageToDeploy: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.version }}
          containerAppEnvironment: raiqa-health-qa-env
          registryUrl: ${{ env.REGISTRY }}

  deploy-uat:
    needs: build-and-push
    if: startsWith(github.ref, 'refs/heads/release/uat')
    runs-on: ubuntu-latest
    environment: uat
    
    steps:
      - uses: actions/checkout@v4
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      - name: Run Prisma migrations and seed
        run: |          
          npm install
          # URL encode the password and store it
          ENCODED_PASSWORD=$(node -e "console.log(encodeURIComponent('${{ secrets.PSQL_PASSWORD_UAT }}'))")
          export DATABASE_URL="postgresql://${{ secrets.PSQL_ADMIN }}:${ENCODED_PASSWORD}@raiqa-health-uat-psql.postgres.database.azure.com:5432/raiqa_assistant_db?sslmode=require&connection_limit=5"
          export DIRECT_URL="postgresql://${{ secrets.PSQL_ADMIN }}:${ENCODED_PASSWORD}@raiqa-health-uat-psql.postgres.database.azure.com:5432/raiqa_assistant_db?sslmode=require&connection_limit=5"
          
          # Run the migration and seeding
          yarn prisma:setup
          
      - name: Deploy to Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: raiqa-health-assistant-uat-server
          resourceGroup: raiqa-health-uat-rg
          imageToDeploy: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.version }}
          containerAppEnvironment: raiqa-health-uat-env
          registryUrl: ${{ env.REGISTRY }}

  deploy-prod:
    needs: build-and-push
    if: startsWith(github.ref, 'refs/heads/release/prod')
    runs-on: ubuntu-latest
    environment: prod
    
    steps:
      - uses: actions/checkout@v4
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      - name: Run Prisma migrations and seed
        run: |          
          npm install
          # URL encode the password and store it
          ENCODED_PASSWORD=$(node -e "console.log(encodeURIComponent('${{ secrets.PSQL_PASSWORD_PROD }}'))")
          export DATABASE_URL="postgresql://${{ secrets.PSQL_ADMIN }}:${ENCODED_PASSWORD}@raiqa-health-prod-psql.postgres.database.azure.com:5432/raiqa_assistant_db?sslmode=require&connection_limit=5"
          export DIRECT_URL="postgresql://${{ secrets.PSQL_ADMIN }}:${ENCODED_PASSWORD}@raiqa-health-prod-psql.postgres.database.azure.com:5432/raiqa_assistant_db?sslmode=require&connection_limit=5"
          
          # Run the migration and seeding
          yarn prisma:setup
          
      - name: Deploy to Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: raiqa-health-assistant-prod-server
          resourceGroup: raiqa-health-prod-rg
          imageToDeploy: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.version }}
          containerAppEnvironment: raiqa-health-prod-env
          registryUrl: ${{ env.REGISTRY }}