name: Collector Build and Deploy

on:
  push:
    branches:
      - 'release/**'
    paths:
      - 'collector/**'
      - '.github/workflows/collector-deploy.yaml'
  workflow_dispatch:

env:
  REGISTRY: raiqahealthacr.azurecr.io
  IMAGE_NAME: raiqa-assistant-collector

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Generate version
        id: version
        run: echo "version=$(date +'%Y%m%d').${{ github.run_number }}" >> $GITHUB_OUTPUT
      
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
          
      - name: Login to ACR
        run: az acr login --name raiqahealthacr
          
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./collector
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}

  deploy-qa:
    needs: build-and-push
    if: startsWith(github.ref, 'refs/heads/release/qa')
    runs-on: ubuntu-latest
    environment: qa
    
    steps:
      - uses: actions/checkout@v4
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
          
      - name: Deploy to Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: raiqa-health-assistant-qa-coll
          resourceGroup: raiqa-health-qa-rg
          imageToDeploy: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.version }}
          containerAppEnvironment: raiqa-health-qa-env
          registryUrl: ${{ env.REGISTRY }}

      - name: Set Container App Environment Variables
        run: |
          # First set the non-sensitive variables from .env.qa
          ENV_VARS=""
          echo "Reading environment variables from collector/.env.qa..."
          
          if [ ! -f "collector/.env.qa" ]; then
            echo "Error: collector/.env.qa file not found at path: collector/.env.qa"
            exit 1
          fi
          
            while IFS= read -r line || [ -n "$line" ]; do
              # Skip empty lines and comments
              [[ -z "$line" || "$line" =~ ^#.*$ ]] && continue
              echo "Processing env var: ${line%%=*}"  # Only show variable name, not value
            ENV_VARS+="$line "
            done < collector/.env.qa

          echo "Updating container app environment variables..."
          # Update the container app with all environment variables
          if ! az containerapp update \
              --name raiqa-health-assistant-qa-coll \
              --resource-group raiqa-health-qa-rg \
              --set-env-vars $ENV_VARS; then
              echo "Error: Failed to update container app environment variables"
              exit 1
            fi

          echo "Successfully updated container app environment variables"

  deploy-uat:
    needs: build-and-push
    if: startsWith(github.ref, 'refs/heads/release/uat')
    runs-on: ubuntu-latest
    environment: uat
    
    steps:
      - uses: actions/checkout@v4
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
          
      - name: Deploy to Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: raiqa-health-assistant-uat-coll
          resourceGroup: raiqa-health-uat-rg
          imageToDeploy: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.version }}
      
      - name: Set Container App Environment Variables
        run: |
          # First set the non-sensitive variables from .env.uat
          ENV_VARS=""
          echo "Reading environment variables from collector/.env.uat..."
          
          if [ ! -f "collector/.env.uat" ]; then
            echo "Error: collector/.env.uat file not found at path: collector/.env.uat"
            exit 1
          fi
          
            while IFS= read -r line || [ -n "$line" ]; do
              # Skip empty lines and comments
              [[ -z "$line" || "$line" =~ ^#.*$ ]] && continue
              echo "Processing env var: ${line%%=*}"  # Only show variable name, not value
            ENV_VARS+="$line "
            done < collector/.env.uat

          echo "Updating container app environment variables..."
          # Update the container app with all environment variables
          if ! az containerapp update \
              --name raiqa-health-assistant-uat-coll \
              --resource-group raiqa-health-uat-rg \
              --set-env-vars $ENV_VARS; then
              echo "Error: Failed to update container app environment variables"
              exit 1
            fi

          echo "Successfully updated container app environment variables"

  deploy-prod:
    needs: build-and-push
    if: startsWith(github.ref, 'refs/heads/release/prod')
    runs-on: ubuntu-latest
    environment: prod
    
    steps:
      - uses: actions/checkout@v4
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
          
      - name: Deploy to Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: raiqa-health-assistant-prod-coll
          resourceGroup: raiqa-health-prod-rg
          imageToDeploy: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.version }}

      - name: Set Container App Environment Variables
        run: |
          # First set the non-sensitive variables from .env.prod
          ENV_VARS=""
          echo "Reading environment variables from collector/.env.prod..."
          
          if [ ! -f "collector/.env.prod" ]; then
            echo "Error: collector/.env.prod file not found at path: collector/.env.prod"
            exit 1
          fi
          
            while IFS= read -r line || [ -n "$line" ]; do
              # Skip empty lines and comments
              [[ -z "$line" || "$line" =~ ^#.*$ ]] && continue
              echo "Processing env var: ${line%%=*}"  # Only show variable name, not value
            ENV_VARS+="$line "
            done < collector/.env.prod

          echo "Updating container app environment variables..."
          # Update the container app with all environment variables
          if ! az containerapp update \
              --name raiqa-health-assistant-prod-coll \
              --resource-group raiqa-health-prod-rg \
              --set-env-vars $ENV_VARS; then
              echo "Error: Failed to update container app environment variables"
              exit 1
            fi

          echo "Successfully updated container app environment variables"